//controller function for user registration, login and user logout

import userModel from "../models/userModel";
import bcrypt from "bcrypt"; //encrypt password
import jwt from "jsonwebtoken"; //generate token for user authentication

const registerUser = async (req,res)=>{
  try{

    const {name,email,password} = req.body;
    //check if user already exists
    if(!name || !email || !password){
      return res.json({success:false,message:"Missing required fields"});
    }

    //encrypt password

    const salt = await bcrypt.genSalt(10);  //moderate level of encryption more val means more secure but slow

    const hashedPassword = await bcrypt.hash(password,salt);

    const userData = {
      name,
      email,
      password : hashedPassword
    }

    const newUser = new userModel(userData);  //create new user 

    const user = await newUser.save(); // save to the database

    const token = jwt.sign({id:user._id},process.env.JWT_SECRET) //_id is auto generated by mongoDB

    res.json({sccess:true,token,user:{name:user.name}})
    

  }catch(error){
    console.log(error);
    res.json({success:false,message:error.message})
  }

}
